version: '3.9'

services:
  postgres:
    image: postgres:13
    container_name: timekeeper_postgres
    environment:
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    ports:
      - '${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}'
    healthcheck: # Don't run the server container until being in a healthy state
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    container_name: timekeeper_server
    build: ./server # Build image from Dockefile in /server
    ports:
      - '${SERVER_HOST_PORT}:${SERVER_CONTAINER_PORT}'
    environment:
      NODE_ENV: docker # Specify the environment to connect to the DB
      DB_HOST: postgres
      DB_NAME: '${POSTGRES_DB}'
      DB_USER: '${POSTGRES_USER}'
      DB_PASSWORD: '${POSTGRES_PASSWORD}'
      DB_PORT: '${POSTGRES_CONTAINER_PORT}'
      DB_DIALECT: postgres
    depends_on: # Wait for DB being in a healthy state
      postgres:
        condition: service_healthy
    healthcheck: # Don't run the client container until being in a healthy state
      test: ['CMD-SHELL', 'curl --fail http://localhost:3000/health_check']
      interval: 5s
      timeout: 3s
      retries: 3

  client:
    container_name: timekeeper_client
    build: ./client # Build image from Dockefile in /server
    ports:
      - '5000:5000'
    depends_on:
      server:
        condition: service_healthy
